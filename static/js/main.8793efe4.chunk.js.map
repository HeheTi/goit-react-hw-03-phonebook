{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ItemContact/ItemContact.module.css","components/ContactList/ContactList.module.css","common/Input/Input.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ItemContact/ItemContact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App/App.jsx","services/localStorage.js","index.js","common/Input/Input.module.css"],"names":["module","exports","Input","label","arg","id","nanoid","className","s","wrapperInput","labelTitle","htmlFor","input","ContactForm","state","name","number","addDataForm","e","setState","target","value","onSubFormData","preventDefault","onSubmitForm","props","resetForm","this","onSubmit","form","type","onChange","pattern","title","required","btnAdd","Component","ItemContact","onClickBtnDel","normalizeName","item","btnDel","onClick","ContactList","filterName","filterContacts","onClickBtnChange","list","map","Filter","onChangeDate","CONTACTS_KEY_LS","App","contacts","filter","addDataApp","split","word","firstUpCaseLetter","charAt","toUpperCase","anoterLetter","substring","join","addContacts","obj","some","alert","prevState","deleteContact","resetFilter","normalizedData","toLowerCase","includes","dataLocalStorage","key","JSON","parse","localStorage","getItem","error","storage","prevProps","setItem","stringify","contactForChange","dataForChange","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8793efe4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2b_89\",\"btnAdd\":\"ContactForm_btnAdd__3Kj1b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ItemContact_item__2138s\",\"btnDel\":\"ItemContact_btnDel__2X9u8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3jhLK\"};","import { nanoid } from 'nanoid';\nimport PropTypes from 'prop-types';\nimport s from './Input.module.css';\n\nconst Input = ({ label, ...arg }) => {\n  const id = nanoid();\n\n  return (\n    <div className={s.wrapperInput}>\n      <label className={s.labelTitle} htmlFor={id}>\n        {label}:\n      </label>\n      <input className={s.input} id={id} {...arg} />\n    </div>\n  );\n};\n\nInput.propTypes = {\n  label: PropTypes.string,\n  arg: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n};\n\nexport default Input;\n","import React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport Input from '../../common/Input';\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  resetForm() {\n    this.setState({ name: '', number: '' });\n  }\n\n  addDataForm = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  onSubFormData = e => {\n    e.preventDefault();\n    const { onSubmitForm } = this.props;\n\n    const objData = { id: nanoid(), ...this.state };\n\n    onSubmitForm(objData);\n    this.resetForm();\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.onSubFormData} className={s.form}>\n        <Input\n          label=\"Name\"\n          type=\"text\"\n          name=\"name\"\n          onChange={this.addDataForm}\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n\n        <Input\n          label=\"Number\"\n          type=\"tel\"\n          name=\"number\"\n          onChange={this.addDataForm}\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n\n        <button type=\"submit\" className={s.btnAdd}>\n          {' '}\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport s from './ItemContact.module.css';\n\nconst ItemContact = ({ name, number, onClickBtnDel, id, normalizeName }) => {\n  return (\n    <li className={s.item} id={id}>\n      {normalizeName(name)}: {number}\n      <button\n        className={s.btnDel}\n        onClick={() => onClickBtnDel(id)}\n        type=\"button\"\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nItemContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default ItemContact;\n\n//<button onClick={onClickBtn} type=\"button\">\n","import PropTypes from 'prop-types';\nimport ItemContact from './ItemContact';\nimport s from './ContactList.module.css';\n\nconst ContactList = props => {\n  const {\n    filterName,\n    filterContacts,\n    onClickBtnDel,\n    onClickBtnChange,\n    normalizeName,\n  } = props;\n  return (\n    <ul className={s.list}>\n      {filterContacts(filterName).map(({ id, name, number }) => {\n        return (\n          <ItemContact\n            id={id}\n            key={id}\n            name={name}\n            number={number}\n            onClickBtnDel={onClickBtnDel}\n            onClickBtnChange={onClickBtnChange}\n            normalizeName={normalizeName}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  filterName: PropTypes.string,\n  filterContacts: PropTypes.func,\n  onClickBtn: PropTypes.func,\n  normalizeName: PropTypes.func,\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport Input from '../../common/Input';\n\nfunction Filter({ onChangeDate, value }) {\n  return (\n    <Input\n      label=\"Find contacts by name\"\n      type=\"text\"\n      onChange={onChangeDate}\n      name=\"filter\"\n      value={value}\n    />\n  );\n}\n\nFilter.propTypes = {\n  onChangeDate: PropTypes.func,\n  value: PropTypes.string,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\n\nimport ContactForm from '../ContactForm';\nimport ContactList from '../ContactList';\nimport Filter from '../Filter';\nimport * as storage from '../../services/localStorage.js';\n\nconst CONTACTS_KEY_LS = 'contacts';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const dataLocalStorage = storage.get(CONTACTS_KEY_LS);\n\n    if (dataLocalStorage) {\n      this.setState({ contacts: dataLocalStorage });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      storage.save(CONTACTS_KEY_LS, this.state.contacts);\n    }\n  }\n\n  addDataApp = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  normalizeName = name =>\n    name\n      .split(' ')\n      .map(word => {\n        const firstUpCaseLetter = word.charAt(0).toUpperCase();\n        const anoterLetter = word.substring(1);\n        return `${firstUpCaseLetter}${anoterLetter}`;\n      })\n      .join(' ');\n\n  addContacts = obj => {\n    const isHaveName = this.state.contacts.some(\n      ({ name }) => name === obj.name,\n    );\n\n    if (isHaveName) {\n      return alert(`${this.normalizeName(obj.name)} is alredy in contacts.`);\n    }\n\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, obj],\n      };\n    });\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(item => item.id !== id),\n      filter: '',\n    }));\n  };\n\n  resetFilter = () => this.setState({ filter: '' });\n\n  filterContacts = filterName => {\n    const normalizedData = filterName.toLowerCase();\n    const arrayFilter = this.state.contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedData),\n    );\n    return arrayFilter;\n  };\n\n  render() {\n    const { filter, contacts, contactForChange } = this.state;\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm\n          onSubmitForm={this.addContacts}\n          dataForChange={contactForChange}\n        />\n\n        <h2>Contacts</h2>\n        {contacts.length > 1 && (\n          <Filter\n            onChangeDate={this.addDataApp}\n            value={contacts.length < 1 ? '' : filter}\n          />\n        )}\n        {!contacts.length && <p>Please, add contact!</p>}\n        {!!contacts.length && (\n          <ContactList\n            normalizeName={this.normalizeName}\n            onClickBtnDel={this.deleteContact}\n            filterContacts={this.filterContacts}\n            filterName={filter}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// deleteContact = () => {\n//   const id = e.target.parentElement.id;\n//   this.setState(prevState => ({\n//     contacts: prevState.contacts.filter(item => item.id !== id),\n//   }));\n// };\n","const save = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (error) {\n    return null;\n  }\n};\n\nconst get = key => {\n  try {\n    return JSON.parse(localStorage.getItem(key));\n  } catch (error) {\n    return null;\n  }\n};\n\nconst remove = key => {\n  try {\n    return localStorage.removeItem(key);\n  } catch (error) {\n    return null;\n  }\n};\n\nexport { get, save, remove };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nimport 'modern-normalize/modern-normalize.css';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperInput\":\"Input_wrapperInput__2NAE4\",\"labelTitle\":\"Input_labelTitle__GUUYt\",\"input\":\"Input_input__28-PP\"};"],"sourceRoot":""}
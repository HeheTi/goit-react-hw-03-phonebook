{"version":3,"sources":["common/Input/Input.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ItemContact/ItemContact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App/App.jsx","services/localStorage.js","index.js"],"names":["Input","label","arg","id","nanoid","className","htmlFor","ContactForm","state","name","number","addDataForm","e","setState","target","value","onSubFormData","preventDefault","onSubmitForm","props","resetForm","this","onSubmit","type","onChange","pattern","title","required","Component","ItemContact","onClickBtnDel","normalizeName","onClick","ContactList","filterName","filterContacts","onClickBtnChange","map","Filter","onChangeDate","CONTACTS_KEY_LS","App","contacts","filter","addDataApp","split","word","firstUpCaseLetter","charAt","toUpperCase","anoterLetter","substring","join","addContacts","obj","some","alert","prevState","deleteContact","item","normalizedData","toLowerCase","includes","dataLocalStorage","key","JSON","parse","localStorage","getItem","error","storage","prevProps","setItem","stringify","contactForChange","dataForChange","length","changeFormAndDate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15bf8879.chunk.js","sourcesContent":["import { nanoid } from 'nanoid';\nimport PropTypes from 'prop-types';\n\nconst Input = ({ label, ...arg }) => {\n  const id = nanoid();\n\n  return (\n    <div className=\"wrapper-input\">\n      <label htmlFor={id}>{label}</label>\n      <input id={id} {...arg} />\n    </div>\n  );\n};\n\nInput.propTypes = {\n  label: PropTypes.string,\n  arg: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n};\n\nexport default Input;\n","import React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport Input from '../../common/Input';\nimport s from '../ContactList/ContactList.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  resetForm() {\n    this.setState({ name: '', number: '' });\n  }\n\n  addDataForm = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  onSubFormData = e => {\n    e.preventDefault();\n    const { onSubmitForm } = this.props;\n\n    const objData = { id: nanoid(), ...this.state };\n\n    onSubmitForm(objData);\n    this.resetForm();\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.onSubFormData} className=\"form\">\n        <Input\n          label=\"Name\"\n          type=\"text\"\n          name=\"name\"\n          onChange={this.addDataForm}\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n\n        <Input\n          label=\"Number\"\n          type=\"tel\"\n          name=\"number\"\n          onChange={this.addDataForm}\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n\n        <button type=\"submit\"> Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\n\nconst ItemContact = ({ name, number, onClickBtnDel, id, normalizeName }) => {\n  return (\n    <li className=\"item\" id={id}>\n      {normalizeName(name)}: {number}\n      <button onClick={() => onClickBtnDel(id)} type=\"button\">\n        Delete\n      </button>\n    </li>\n  );\n};\n\nItemContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default ItemContact;\n\n//<button onClick={onClickBtn} type=\"button\">\n","import PropTypes from 'prop-types';\nimport ItemContact from './ItemContact';\n\nconst ContactList = props => {\n  const {\n    filterName,\n    filterContacts,\n    onClickBtnDel,\n    onClickBtnChange,\n    normalizeName,\n  } = props;\n  return (\n    <ul className=\"list\">\n      {filterContacts(filterName).map(({ id, name, number }) => {\n        return (\n          <ItemContact\n            id={id}\n            key={id}\n            name={name}\n            number={number}\n            onClickBtnDel={onClickBtnDel}\n            onClickBtnChange={onClickBtnChange}\n            normalizeName={normalizeName}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  filterName: PropTypes.string,\n  filterContacts: PropTypes.func,\n  onClickBtn: PropTypes.func,\n  normalizeName: PropTypes.func,\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport Input from '../../common/Input';\n\nfunction Filter({ onChangeDate, value }) {\n  return (\n    <Input\n      label=\"Find contacts by name\"\n      type=\"text\"\n      onChange={onChangeDate}\n      name=\"filter\"\n      value={value}\n    />\n  );\n}\n\nFilter.propTypes = {\n  onChangeDate: PropTypes.func,\n  value: PropTypes.string,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\n\nimport ContactForm from '../ContactForm';\nimport ContactList from '../ContactList';\nimport Filter from '../Filter';\nimport * as storage from '../../services/localStorage.js';\n\nconst CONTACTS_KEY_LS = 'contacts';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const dataLocalStorage = storage.get(CONTACTS_KEY_LS);\n\n    if (dataLocalStorage) {\n      this.setState({ contacts: dataLocalStorage });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      storage.save(CONTACTS_KEY_LS, this.state.contacts);\n    }\n  }\n\n  addDataApp = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  normalizeName = name =>\n    name\n      .split(' ')\n      .map(word => {\n        const firstUpCaseLetter = word.charAt(0).toUpperCase();\n        const anoterLetter = word.substring(1);\n        return `${firstUpCaseLetter}${anoterLetter}`;\n      })\n      .join(' ');\n\n  addContacts = obj => {\n    const isHaveName = this.state.contacts.some(\n      ({ name }) => name === obj.name,\n    );\n\n    if (isHaveName) {\n      return alert(`${this.normalizeName(obj.name)} is alredy in contacts.`);\n    }\n\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, obj],\n      };\n    });\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(item => item.id !== id),\n    }));\n  };\n\n  filterContacts = filterName => {\n    const normalizedData = filterName.toLowerCase();\n    return this.state.contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedData),\n    );\n  };\n\n  render() {\n    const { filter, contacts, contactForChange } = this.state;\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm\n          onSubmitForm={this.addContacts}\n          dataForChange={contactForChange}\n        />\n\n        <h2>Contacts</h2>\n        {contacts.length > 1 && (\n          <Filter onChangeDate={this.addDataApp} value={filter} />\n        )}\n\n        {!!contacts.length && (\n          <ContactList\n            normalizeName={this.normalizeName}\n            onClickBtnDel={this.deleteContact}\n            onClickBtnChange={this.changeFormAndDate}\n            filterContacts={this.filterContacts}\n            filterName={filter}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// deleteContact = () => {\n//   const id = e.target.parentElement.id;\n//   this.setState(prevState => ({\n//     contacts: prevState.contacts.filter(item => item.id !== id),\n//   }));\n// };\n","const save = (key, value) => {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst get = key => {\r\n  try {\r\n    return JSON.parse(localStorage.getItem(key));\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst remove = key => {\r\n  try {\r\n    return localStorage.removeItem(key);\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport { get, save, remove };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}